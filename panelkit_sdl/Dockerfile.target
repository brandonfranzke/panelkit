FROM debian:bookworm

# Install build tools
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    crossbuild-essential-arm64 \
    pkg-config \
    wget \
    libfreetype6-dev:arm64 \
    libdrm-dev:arm64 \
    libgbm-dev:arm64 \
    zlib1g-dev:arm64 \
    libbrotli-dev:arm64 \
    libssl-dev:arm64 \
    libpsl-dev:arm64 \
    libssh2-1-dev:arm64 \
    libldap2-dev:arm64 \
    libkrb5-dev:arm64 \
    libidn2-dev:arm64 \
    libunistring-dev:arm64 \
    libzstd-dev:arm64 \
    librtmp-dev:arm64 \
    libnghttp2-dev:arm64

# Set up cross-compilation environment
ENV PKG_CONFIG_PATH=/usr/lib/aarch64-linux-gnu/pkgconfig
ENV CC=aarch64-linux-gnu-gcc
ENV CXX=aarch64-linux-gnu-g++
ENV AR=aarch64-linux-gnu-ar
ENV STRIP=aarch64-linux-gnu-strip

# Create build directory and cross-compilation toolchain file first
RUN mkdir -p /build && \
    echo 'set(CMAKE_SYSTEM_NAME Linux)' > /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_SYSTEM_PROCESSOR aarch64)' >> /build/arm64-toolchain.cmake && \
    echo '' >> /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)' >> /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)' >> /build/arm64-toolchain.cmake && \
    echo '' >> /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH /usr/aarch64-linux-gnu /usr/local/aarch64 /usr/lib/aarch64-linux-gnu /usr/include)' >> /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)' >> /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)' >> /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)' >> /build/arm64-toolchain.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)' >> /build/arm64-toolchain.cmake && \
    echo '' >> /build/arm64-toolchain.cmake && \
    echo 'set(PKG_CONFIG_EXECUTABLE /usr/bin/pkg-config)' >> /build/arm64-toolchain.cmake && \
    echo 'set(ENV{PKG_CONFIG_PATH} /usr/lib/aarch64-linux-gnu/pkgconfig)' >> /build/arm64-toolchain.cmake

# Download and build minimal SDL2 from source
WORKDIR /build
RUN git clone --depth 1 --branch release-2.30.x https://github.com/libsdl-org/SDL.git SDL2

WORKDIR /build/SDL2
RUN mkdir build && cd build && \
    cmake .. \
    -DCMAKE_TOOLCHAIN_FILE=/build/arm64-toolchain.cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr/local/aarch64 \
    -DSDL_SHARED=OFF \
    -DSDL_STATIC=ON \
    -DSDL_AUDIO=OFF \
    -DSDL_VIDEO=ON \
    -DSDL_RENDER=ON \
    -DSDL_EVENTS=ON \
    -DSDL_JOYSTICK=OFF \
    -DSDL_HAPTIC=OFF \
    -DSDL_SENSOR=OFF \
    -DSDL_X11=OFF \
    -DSDL_WAYLAND=OFF \
    -DSDL_COCOA=OFF \
    -DSDL_DIRECTX=OFF \
    -DSDL_RENDER_D3D=OFF \
    -DSDL_DUMMYVIDEO=ON \
    -DSDL_KMSDRM=ON \
    -DSDL_OPENGL=OFF \
    -DSDL_OPENGLES=OFF \
    -DSDL_VULKAN=OFF \
    && make -j$(nproc) \
    && make install

# Download and build minimal SDL2_ttf from source
WORKDIR /build
RUN git clone --depth 1 --branch release-2.22.x https://github.com/libsdl-org/SDL_ttf.git SDL2_ttf

WORKDIR /build/SDL2_ttf
RUN mkdir build && cd build && \
    cmake .. \
    -DCMAKE_TOOLCHAIN_FILE=/build/arm64-toolchain.cmake \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr/local/aarch64 \
    -DSDL2TTF_SAMPLES=OFF \
    -DSDL2TTF_HARFBUZZ=OFF \
    -DSDL2TTF_FREETYPE=ON \
    -DBUILD_SHARED_LIBS=OFF \
    -DSDL2_DIR=/usr/local/aarch64/lib/cmake/SDL2 \
    -DFREETYPE_LIBRARY=/usr/lib/aarch64-linux-gnu/libfreetype.a \
    -DFREETYPE_INCLUDE_DIRS=/usr/include/freetype2 \
    -DPkgConfig_EXECUTABLE=/usr/bin/pkg-config \
    -DPKG_CONFIG_EXECUTABLE=/usr/bin/pkg-config \
    && make -j$(nproc) \
    && make install

# Install minimal curl (static)
RUN apt-get install -y libcurl4-openssl-dev:arm64

WORKDIR /project

# Build command will be passed as CMD
CMD ["bash", "-c", "\
    mkdir -p build/target \
    && cd build/target \
    && cmake -DCMAKE_TOOLCHAIN_FILE=/build/arm64-toolchain.cmake -DEMBEDDED_BUILD=ON ../.. \
    && make -j$(nproc) \
    && echo 'Embedded build completed successfully' \
"]